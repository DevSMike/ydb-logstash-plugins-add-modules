name: Build and Release Gems

on:
  push:
    branches:
      - master
      - develop
      - release*
  pull_request:
    types: [opened, reopened, edited]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0

      - name: Clone Logstash repository
        run: git clone https://github.com/elastic/logstash

      - name: Set LOGSTASH_CORE_PATH
        run: |
          echo "LOGSTASH_CORE_PATH=$(pwd)/logstash/logstash-core" >> $GITHUB_ENV
          echo "LOGSTASH_CORE_PATH=$(pwd)/logstash/logstash-core" > gradle.properties

      - name: Generate logstash-core.jar
        run: |
          cd logstash
          ./gradlew assemble

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Gems in ydb_input_plugin
        run: |
          cd ydb_input_plugin
          ../gradlew gem

      - name: Build Gems in ydb_output_plugin
        run: |
          cd ydb_output_plugin
          ../gradlew gem

  release:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0

      - name: Create Release
        id: create_release
        run: echo "v${{ github.event.after }}" > release_version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts from ydb_input_plugin
        if: success() && exists('ydb_input_plugin/*.gem')
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: $(file -b --mime-type ydb_input_plugin/*.gem)" \
          --data-binary @ydb_input_plugin/*.gem \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=Gem Files"

      - name: Upload release artifacts from ydb_output_plugin
        if: success() && exists('ydb_output_plugin/*.gem')
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: $(file -b --mime-type ydb_output_plugin/*.gem)" \
          --data-binary @ydb_output_plugin/*.gem \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=Gem Files"

