name: Build and Test Gems

on:
  push:
    branches:
      - master
      - develop
      - release*
  pull_request:
    type: [opened, reopened, edited]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0

      - name: Create Logstash directory
        run: mkdir logstash

      - name: Get latest Logstash version
        id: latest_version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/elastic/logstash/releases | jq -r '.[0].tag_name')
          echo "::set-output name=latest_version::${latest_version}"

      - name: Calculate previous version
        id: previous_version
        run: |
          latest_version="${{ steps.latest_version.outputs.latest_version }}"
          previous_version=$(echo $latest_version | awk -F'.' '{printf "%d.%d.%d", $1-1, $2, $3}')
          echo "::set-output name=previous_version::${previous_version}"

      - name: Set versions output
        id: set_versions
        run: |
          latest_version="${{ steps.latest_version.outputs.latest_version }}"
          previous_version="${{ steps.previous_version.outputs.previous_version }}"
          echo "::set-output name=versions::${latest_version} ${previous_version}"

      - name: Test Build Gems on the Latest Two Logstash Release Versions
        run: |
          versions=($(echo "${{ steps.set_versions.outputs.versions }}" | tr ' ' '\n'))
          for version in "${versions[@]}"; do
          
            echo "Current Logstash version: $version"
          
            rm -rf "logstash/$version"

            wget -P "logstash" "https://github.com/elastic/logstash/archive/$version.tar.gz"
            tar -xzf "logstash/$version.tar.gz" --directory "logstash"
            logstash_dir=$(tar -tzf "logstash/$version.tar.gz" | head -n 1 | cut -f1 -d"/")
          
            echo "LOGSTASH_CORE_PATH=$(pwd)/logstash/$logstash_dir/logstash-core" > gradle.properties
            echo "LOGSTASH_VERSION=$version" >> $GITHUB_ENV

            cd logstash/$logstash_dir
            ./gradlew clean
            ./gradlew assemble
            cd ../..
          
            ./gradlew clean
          
            cd ydb_input_plugin
            ../gradlew gem
            cd ..
            cd ydb_output_plugin
            ../gradlew gem
            cd ..
          done
